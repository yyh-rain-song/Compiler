define main () {
	b0:
	mov rbx, qword [g_0]
	mov qword [g_0], rbx
	mov rbx, 0
	mov stack[0], rbx
	b1:
	mov rbx, stack[0]
	jl rbx, 4, b2, b3
	b3:
	mov rax, 0
	b4:
	mov rbx, qword [g_0]
	mov qword [g_0], rbx
	ret 
	b2:
	call rax = getInt
	mov stack[1], rax
	mov rbx, stack[1]
	mov r10, qword [g_0]
	mov r11, stack[0]
	mov qword [r10 + r11 * 8 + 8], rbx
	b5:
	mov rbx, stack[0]
	inc rbx
	mov stack[0], rbx
	jmp b1
}
define init () {
	b6:
	mov rbx, 4
	mov stack[2], rbx
	mov rbx, stack[3]
	mov r10, stack[2]
	lea rbx, [r10 * 8 + 8]
	mov stack[3], rbx
	mov rdi, stack[3]
	call rax = malloc, v0
	mov stack[4], rax
	mov rbx, stack[4]
	mov qword [rbx], 4
	b7:
	mov rbx, stack[2]
	jg rbx, 0, b8, b9
	b9:
	mov rbx, stack[4]
	mov r10, rbx
	mov qword [g_0], r10
	mov rbx, qword [g_0]
	mov qword [g_0], rbx
	call rax = main
	mov rbx, qword [g_0]
	mov qword [g_0], rbx
	ret 
	b8:
	mov rbx, stack[4]
	mov r10, stack[2]
	mov qword [rbx + r10 * 8], 0
	mov rbx, stack[2]
	dec rbx
	mov stack[2], rbx
	jmp b7
}
g_0: 8 bytes
