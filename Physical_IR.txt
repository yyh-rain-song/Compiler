define fibo (v0) {
	b0:
	mov r13, rdi
	jl r13, 2, b1, b2
	b2:
	mov rax, r13
	sub rax, 1
	mov r12, rax
	b3:
	jl r12, 2, b4, b5
	b5:
	mov rax, r12
	sub rax, 1
	mov r14, rax
	b6:
	jl r14, 2, b7, b8
	b8:
	mov rax, r14
	sub rax, 1
	mov rdi, rax
	call rax = fibo, v1
	imul r14
	jmp b9
	b7:
	mov rax, r14
	b9:
	imul r12
	jmp b10
	b4:
	mov rax, r12
	b10:
	imul r13
	jmp b11
	b1:
	mov rax, r13
	b11:
	ret 
}
define main () {
	b12:
	mov r14, 10
	b13:
	jl r14, 2, b14, b15
	b15:
	mov rax, r14
	sub rax, 1
	mov r13, rax
	b16:
	jl r13, 2, b17, b18
	b18:
	mov rax, r13
	sub rax, 1
	mov rdi, rax
	call rax = fibo, v2
	imul r13
	jmp b19
	b17:
	mov rax, r13
	b19:
	imul r14
	jmp b20
	b14:
	mov rax, r14
	b20:
	mov rdi, rax
	call rax = toString, v3
	mov rdi, rax
	call rax = println, v4
	mov rax, 0
	b21:
	ret 
}
define init () {
	b22:
	call rax = main
	ret 
}
