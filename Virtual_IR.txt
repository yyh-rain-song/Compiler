define fibo (v0) {
	b0:
	mov v0, rdi
	jl v0, 2, b1, b2
	b2:
	mov v1, v0
	sub v1, 1
	mov v2, v1
	b3:
	jl v2, 2, b4, b5
	b5:
	mov v3, v2
	sub v3, 1
	mov v4, v3
	b6:
	jl v4, 2, b7, b8
	b8:
	mov v5, v4
	sub v5, 1
	mov rdi, v5
	call rax = fibo, v5
	mov v6, rax
	mov rax, v6
	imul v4
	mov v7, rax
	mov rax, v7
	jmp b9
	b7:
	mov rax, v4
	b9:
	mov v8, rax
	mov rax, v8
	imul v2
	mov v9, rax
	mov rax, v9
	jmp b10
	b4:
	mov rax, v2
	b10:
	mov v10, rax
	mov rax, v10
	imul v0
	mov v11, rax
	mov rax, v11
	jmp b11
	b1:
	mov rax, v0
	b11:
	ret 
}
define main () {
	b12:
	mov v12, 10
	b13:
	jl v12, 2, b14, b15
	b15:
	mov v13, v12
	sub v13, 1
	mov v14, v13
	b16:
	jl v14, 2, b17, b18
	b18:
	mov v15, v14
	sub v15, 1
	mov rdi, v15
	call rax = fibo, v15
	mov v16, rax
	mov rax, v16
	imul v14
	mov v17, rax
	mov rax, v17
	jmp b19
	b17:
	mov rax, v14
	b19:
	mov v18, rax
	mov rax, v18
	imul v12
	mov v19, rax
	mov rax, v19
	jmp b20
	b14:
	mov rax, v12
	b20:
	mov v20, rax
	mov rdi, v20
	call rax = toString, v20
	mov v21, rax
	mov rdi, v21
	call rax = println, v21
	mov rax, 0
	b21:
	ret 
}
define init () {
	b22:
	call rax = main
	ret 
}
