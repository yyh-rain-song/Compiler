define f (v0) {
	b0:
	mov v0, rdi
	mov v1, 0
	mov v2, 0
	b1:
	jl v2, v0, b2, b3
	b3:
	mov rax, v1
	b4:
	ret 
	b2:
	mov v3, v1
	add v3, v2
	mov v4, v2
	sub v4, 1
	mov v5, v0
	and v5, v4
	mov v6, v3
	xor v6, v5
	mov v1, v6
	mov rax, v1
	cdq
	mov v7, 10000
	idiv v7
	mov v8, rdx
	mov v1, v8
	b5:
	add v2, 1
	jmp b1
}
define main () {
	b6:
	mov v9, 0
	mov v10, 0
	b7:
	jl v10, 90000000, b8, b9
	b9:
	mov rdi, v9
	call rax = toString, v9
	mov v11, rax
	mov rdi, v11
	call rax = println, v11
	mov rax, 0
	b10:
	ret 
	b8:
	mov v12, 0
	b11:
	jl v12, 10, b12, b13
	b13:
	b14:
	inc v10
	jmp b7
	b12:
	jl v10, 89999999, b15, b16
	b16:
	jl v12, 9, b17, b18
	b18:
	mov rax, v10
	mov v13, 8
	imul v13
	mov v14, rax
	mov v15, v14
	b19:
	mov v16, 0
	mov v17, 0
	b20:
	jl v17, v15, b21, b22
	b22:
	mov rax, v16
	b23:
	mov v18, rax
	add v9, v18
	b17:
	b15:
	b24:
	inc v12
	jmp b11
	b21:
	mov v19, v16
	add v19, v17
	mov v20, v17
	sub v20, 1
	mov v21, v15
	and v21, v20
	mov v22, v19
	xor v22, v21
	mov v16, v22
	mov rax, v16
	cdq
	mov v23, 10000
	idiv v23
	mov v24, rdx
	mov v16, v24
	b25:
	add v17, 1
	jmp b20
}
define init () {
	b26:
	call rax = main
	ret 
}
